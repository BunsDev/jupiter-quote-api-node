openapi: 3.0.0
info:
  title: Jupiter Api v5
  version: 5.0.0
  description: Jupiter quote and swap API

servers:
  - url: https://quote-api.jup.ag/v6

paths:
  /quote:
    get:
      summary: GET /quote
      parameters:
        - $ref: '#/components/parameters/OutputMintParameter'
        - $ref: '#/components/parameters/InputMintParameter'
        - $ref: '#/components/parameters/AmountParameter'
        - $ref: '#/components/parameters/SlippageParameter'
        - $ref: '#/components/parameters/DexesParameter'
        - $ref: '#/components/parameters/ExcludeDexesParameter'
        - $ref: '#/components/parameters/OnlyDirectRoutesParameter'
        - $ref: '#/components/parameters/AsLegacyTransactionParameter'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponseV2'
  /indexed-route-map:
    get:
      summary: GET /indexed-route-map
      description: Returns a hash map, input mint as key and an array of valid output mint as values, token mints are indexed to reduce the file size
      parameters:
        - $ref: '#/components/parameters/OnlyDirectRoutesParameter'
      responses:
        '200':
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexedRouteMapResponse'
  /swap:
    post:
      summary: POST /swap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwapRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwapResponse'

components:
  schemas:
    QuoteResponseV2:
      type: object
      properties:
        inputMint:
          type: string
          required: true
        inAmount:
          type: string
          required: true
        outputMint:
          type: string
          required: true
        outAmount:
          type: string
          required: true
        otherAmountThreshold:
          type: string
          required: true
        swapMode:
          $ref: '#/components/schemas/SwapMode'
          required: true
        slippageBps:
          type: integer
          format: int32
          required: true
        platformFee:
          $ref: '#/components/schemas/PlatformFee'
        priceImpactPct:
          type: number
          required: true
        routePlan:
          type: array
          required: true
          items:
            $ref: '#/components/schemas/RoutePlanStep'
        contextSlot:
          type: number
        timeTaken:
          type: number

    SwapMode:
      type: string
      enum:
        - ExactIn
        - ExactOut

    PlatformFee:
      type: object
      properties:
        amount:
          type: string
        feeBps:
          type: integer
          format: int32

    RoutePlanStep:
      type: object
      properties:
        swapInfo:
          $ref: '#/components/schemas/SwapInfo'
        percent:
          type: integer
          format: int32

    SwapInfo:
      type: object
      properties:
        ammKey:
          type: string
          required: true
        label:
          type: string
          required: true
        inputMint:
          type: string
          required: true
        outputMint:
          type: string
          required: true
        inAmount:
          type: string
          required: true
        outAmount:
          type: string
          required: true
        feeAmount:
          type: string
          required: true
        feeMint:
          type: string
          required: true

    DexValue:
      type: string
      enum:
        - Aldrin
        - Lifinity V1
        - Crema
        - Whirlpool
        - Orca V1
        - Saber
        - Aldrin V2
        - Penguin
        - Cropper
        - Lifinity V2
        - Openbook
        - StepN
        - Symmetry
        - Marinade
        - Raydium
        - Oasis
        - Phoenix
        - Orca V2
        - Saber (Decimals)
        - Balansol
        - Raydium CLMM
        - Meteora
        - Saros
        - Mercurial
        
    SwapRequest:
      type: object
      properties:
        userPublicKey:
          type: string
        quoteResponse:
          $ref: '#/components/schemas/QuoteResponseV2'
        wrapAndUnwrapSol:
          type: boolean
        feeAccount:
          type: string
        computeUnitPriceMicroLamports:
          anyOf:
            - type: number
              format: double
            - type: string
              enum:
                - auto

    SwapResponse:
      type: object
      properties:
        swapTransaction:
          type: string

    IndexedRouteMapResponse:
      type: object
      properties:
        mintKeys:
          type: array
          required: true
          items:
            type: string
          description: All the mints that are indexed to match in indexedRouteMap
        indexedRouteMap:
          type: object
          required: true
          description: All the possible route and their corresponding output mints
          additionalProperties:
            type: array
            items:
              type: number
          example:
            '1':
              - 2
              - 3
              - 4
            '2':
              - 1
              - 3
              - 4

  parameters:
    OutputMintParameter:
      name: outputMint
      in: query
      required: true
      schema:
        type: string
    InputMintParameter:
      name: inputMint
      in: query
      required: true
      schema:
        type: string
    AmountParameter:
      name: amount
      in: query
      required: true
      schema:
        type: string
    SlippageParameter:
      name: slippage
      in: query
      schema:
        type: number
    DexesParameter:
      name: dexes
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/DexValue'
        style: form
        explode: true
    ExcludeDexesParameter:
      name: excludeDexes
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/DexValue'
        style: form
        explode: true
    OnlyDirectRoutesParameter:
      name: onlyDirectRoutes
      in: query
      schema:
        type: boolean
    AsLegacyTransactionParameter:
      name: asLegacyTransaction
      in: query
      schema:
        type: boolean